# MIT License
# 
# Copyright 2021 Mojohaus
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: GitHub CI

on:
  workflow_dispatch: {}
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - 'main'
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/codehaus/mojo/aspectj-maven-plugin
          key: maven-${{ matrix.os }}-java${{ matrix.java }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ matrix.java }}-
            maven-${{ matrix.os }}-
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: temurin

      - name: Prepare maven build
        shell: bash
        # cannot go offline, the system dependency is being looked up on Central.
        # blocked by MDEP-568
        run: mvn --show-version --errors --batch-mode validate 

      - name: Build with Maven
        shell: bash
        run: mvn --show-version --errors --batch-mode "-Dinvoker.streamLogsOnFailures=true" "-Prun-its,docs" clean verify

  site:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/codehaus/mojo/aspectj-maven-plugin
          key: maven-${{ matrix.os }}-java${{ matrix.java }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ matrix.java }}-
            maven-${{ matrix.os }}-
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: temurin
      - name: Build with Maven
        shell: bash
        run: mvn --show-version --errors --batch-mode clean site site:stage

  build-all:

    needs: build 

    strategy:
      matrix:
        maven: [ '3.8.6' ]
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        java:
          # Hotspot VM, the "default" VM
          - version: 8
            dist: temurin
          - version: 11
            dist: temurin
          - version: 17
            dist: temurin
          # Zulu VM, based on Hotspot
          - version: 8
            dist: zulu
          - version: 11
            dist: zulu
          - version: 17
            dist: zulu
          # OpenJ9, an alternate JVM implementation.
          - version: 8
            dist: adopt-openj9
          - version: 11
            dist: adopt-openj9
          - version: 17
            dist: adopt-openj9
        exclude:
          # exclude some builds, because MacOs builds have fewer resources available.
          # excludes java 17 on macOS.
          - os: macOS-latest
            java:
              version: 17
          # exclude adopt-hotspot on MacOS. zulu (also hotspot) and OpenJ9 are sufficient.
          - os: macOS-latest
            java:
              dist: temurin
          # exclude old maven versions on MacOS.
          - os: macOS-latest
            maven: '3.3.9'
          # exclude old maven version with various JDKs, one will do.
          - maven: '3.3.9'
            java:
              dist: temurin
          - maven: '3.3.9'
            java:
              dist: zulu

      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/codehaus/mojo/aspectj-maven-plugin
          key: maven-${{ matrix.os }}-java${{ matrix.java }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ matrix.java }}-
            maven-${{ matrix.os }}-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java.version }}
          distribution: ${{ matrix.java.dist }}


      - name: Set up Maven
        shell: bash
        run: mvn -N "io.takari:maven:0.7.7:wrapper" "-Dmaven=${{ matrix.maven }}"

      - name: Prepare maven build
        shell: bash
        run: ./mvnw --show-version --errors --batch-mode validate

      - name: Build with Maven
        shell: bash
        run: ./mvnw --show-version --errors --batch-mode "-Dinvoker.streamLogsOnFailures=true" "-Prun-its,docs" clean verify

